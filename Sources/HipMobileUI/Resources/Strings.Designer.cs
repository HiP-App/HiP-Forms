//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HipMobileUI.Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HipMobileUI.Resources.Strings", typeof(Strings).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die Nutzung der App basiert auf Freiwilligkeit. Sämtliche Daten, die im Rahmen der Nutzung der Dienste und Applikation Verwendung finden, dürfen nur erhoben und verarbeitet werden, soweit dies für den Dienst und statistische Forschungs- und Evaluationszwecke erforderlich ist und den Regelungen der Universität Paderborn und dem Datenschutzgesetz NRW entspricht. ähnelt.
        /// </summary>
        public static string LicenseScreenView_Agreement_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_Agreement_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rechtsgrundlagen und Einwilligung ähnelt.
        /// </summary>
        public static string LicenseScreenView_Agreement_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Agreement_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beiträge ähnelt.
        /// </summary>
        public static string LicenseScreenView_Contribution_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Contribution_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die Software Historisches Paderborn unterliegt dem deutschen Urheberrecht. Die Vervielfältigung, Bearbeitung, Verbreitung und jede Art der Verwertung bedürfen der schriftlichen Zustimmung der Universität Paderborn. Die Nutzung der Software ist nur für den privaten, nicht kommerziellen Gebrauch gestattet. ähnelt.
        /// </summary>
        public static string LicenseScreenView_Copyright_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_Copyright_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright ähnelt.
        /// </summary>
        public static string LicenseScreenView_Copyright_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Copyright_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bilder erstellt von &lt;a href=&quot;http://www.flaticon.com/authors/madebyoliver/&quot;&gt;Madebyoliver&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com/&quot;&gt;www.flaticon.com&lt;/a&gt;. ähnelt.
        /// </summary>
        public static string LicenseScreenView_CreditsImagesAutocarousel_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_CreditsImagesAutocarousel_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Credits der Bilder im Autokarussell ähnelt.
        /// </summary>
        public static string LicenseScreenView_CreditsImagesAutocarousel_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_CreditsImagesAutocarousel_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;http://commonservicelocator.codeplex.com&quot;&gt;Microsoft&lt;/a&gt;, lizensiert unter &lt;a href=&quot;http://commonservicelocator.codeplex.com/license&quot;&gt;Ms-PL&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_CSL_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_CSL_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Common Service Locator ähnelt.
        /// </summary>
        public static string LicenseScreenView_CSL_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_CSL_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die Daten die die App darstellt werden auf dem Smartphone in einer separaten Datenbank gespeichert. Die App liest und schreibt ausschließlich in dieser Datenbank. Der gesamte Datenverkehr erfolgt lokal. ähnelt.
        /// </summary>
        public static string LicenseScreenView_DatabaseData_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_DatabaseData_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Datenbank-Daten ähnelt.
        /// </summary>
        public static string LicenseScreenView_DatabaseData_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_DatabaseData_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Für den technischen Betrieb, das Aufspüren von Fehlern steht es dem Nutzer frei Feedback an die Entwickler zu senden. Die Daten enthalten Informationen über Namen und E-Mail-Adresse, die vom User frei gewählt werden können. Die Erhebung und Nutzung dieser Feedback-Daten dienen lediglich der Fehlerbeseitigung und werden zudem in anonymisierter Form für statistischen Forschungs- und Evaluationszwecke ausgewertet. Die Log-Daten werden auf den Servern der Feedback Anwendung Hockeyapp gespeichert. ähnelt.
        /// </summary>
        public static string LicenseScreenView_FeedbackData_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_FeedbackData_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Feedback-Daten ähnelt.
        /// </summary>
        public static string LicenseScreenView_FeedbackData_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_FeedbackData_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://github.com/Fody/Fody&quot;&gt;Simon Cropp&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://opensource.org/licenses/mit-license.php&quot;&gt;MIT&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_Fody_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_Fody_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fody ähnelt.
        /// </summary>
        public static string LicenseScreenView_Fody_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Fody_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wenn Fragen bestehen, die diese Datenschutzerklärung nicht beantwortet, oder wenn zu einzelnen Punkten vertiefte Informationen gewünscht werden, gibt der Software Innovation Campus Paderborn gerne weitere Auskunft. E-Mail: hip-app@campus.uni-paderborn.de Telefon +49 5251 603358 Postalisch: Universität Paderborn Software Innovation Campus Warburger Str. 100 D-33098 Paderborn ähnelt.
        /// </summary>
        public static string LicenseScreenView_FurtherInfo_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_FurtherInfo_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weitergehende Informationen ähnelt.
        /// </summary>
        public static string LicenseScreenView_FurtherInfo_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_FurtherInfo_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://github.com/bitstadium/HockeySDK-Android&quot;&gt;Microsoft&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://raw.githubusercontent.com/bitstadium/HockeySDK-Xamarin/master/LICENSE.md&quot;&gt;Lizenz&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_HockeyApp_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_HockeyApp_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HockeyApp ähnelt.
        /// </summary>
        public static string LicenseScreenView_HockeyApp_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_HockeyApp_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HiP (History in Paderborn) ist eine Plattform der:
        ///&lt;a href=&quot;http://www.uni-paderborn.de&quot;&gt;Universität Paderborn&lt;/a&gt;
        ///Warburger Str. 100 
        ///33098 Paderborn 
        ///Tel.: +49 5251 60-0 
        ///
        ///Die Universität Paderborn ist eine vom Land NRW getragene, rechtsfähige Körperschaft des Öffentlichen Rechts. Sie wird durch den Präsidenten vertreten.
        ///
        ///Umsatzsteuer-Identifikationsnummer gemäß § 27 a Umsatzsteuergesetz: DE 811209907
        ///
        ///Zuständige Aufsichtsbehörde: Ministerium für Innovation, Wissenschaft, Forschung und Technolo [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string LicenseScreenView_Impressum_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_Impressum_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Impressum ähnelt.
        /// </summary>
        public static string LicenseScreenView_Impressum_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Impressum_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://github.com/Itinero&quot;&gt;Ben Abelshausen&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;Apache License 2.0&lt;/a&gt; durch Erlaubnis. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_Itinero_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_Itinero_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Itinero ähnelt.
        /// </summary>
        public static string LicenseScreenView_Itinero_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Itinero_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die Universität Paderborn übernimmt keine Garantie dafür, dass der Dienst fehlerfrei und jederzeit ohne Unterbrechung zur Verfügung steht. Eventuelle Datenverluste infolge technischer Störungen sowie die Kenntnisnahme vertraulicher Daten durch unberechtigte Zugriffe Dritter können nicht in jedem Fall ausgeschlossen werden. Die Universität Paderborn übernimmt keine Verantwortung für die Korrektheit der durch den Dienst zur Verfügung gestellten Informationen. Sie haftet auch nicht für den Inhalt, insbesondere [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string LicenseScreenView_Liability_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_Liability_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Haftung ähnelt.
        /// </summary>
        public static string LicenseScreenView_Liability_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Liability_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lizenzen ähnelt.
        /// </summary>
        public static string LicenseScreenView_License_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_License_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://mapicons.mapsmarker.com/&quot;&gt;Maps Icons Collection&lt;/a&gt;, lizensiert unter &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;CC-BY-SA 3.0&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_MapIcons_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_MapIcons_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Map Icons ähnelt.
        /// </summary>
        public static string LicenseScreenView_MapIcons_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_MapIcons_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://design.google.com/icons/&quot;&gt;Google&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;Apache License 2.0&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_MaterialIcons_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_MaterialIcons_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Material Icons ähnelt.
        /// </summary>
        public static string LicenseScreenView_MaterialIcons_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_MaterialIcons_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://github.com/MKergall/osmbonuspack&quot;&gt;MKergall&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://raw.githubusercontent.com/MKergall/osmbonuspack/master/LICENSE.md&quot;&gt;GNU Lesser General Public License 3.0 (LGPL 3.0)&lt;/a&gt; (ohne §5.d und §5.e). Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_OSMBonusPack_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_OSMBonusPack_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OSMBonusPack ähnelt.
        /// </summary>
        public static string LicenseScreenView_OSMBonusPack_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_OSMBonusPack_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://github.com/osmdroid/osmdroid&quot;&gt;osmdroid&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://raw.githubusercontent.com/osmdroid/osmdroid/master/LICENSE&quot;&gt;Apache License 2.0&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_Osmdroid_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_Osmdroid_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die osmdroid ähnelt.
        /// </summary>
        public static string LicenseScreenView_Osmdroid_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Osmdroid_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://osmsharp.com/&quot;&gt;Ben Abelshausen&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://opensource.org/licenses/mit-license.php&quot;&gt;MIT&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_OsmSharp_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_OsmSharp_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OsmSharp ähnelt.
        /// </summary>
        public static string LicenseScreenView_OsmSharp_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_OsmSharp_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Historisches in Paderborn ist ein nicht-kommerzieller interaktiver Stadtführer der Universität Paderborn für mobile Endgeräte, dessen Nutzung auf Freiwilligkeit basiert. Die bei der Nutzung erhobenen Daten werden nur für die hier beschriebenen Zwecke verwendet und an keine Dritte weitergegeben. Diese Datenschutzerklärung beschreibt den Umgang mit personenbezogenen Daten innerhalb der Stadtführer App. Mit der Installation der App erklärt sich der Nutzer mit dieser Datenschutzerklärung einverstanden und kann  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string LicenseScreenView_PrivacyPolicy_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_PrivacyPolicy_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Datenschutzerklärung ähnelt.
        /// </summary>
        public static string LicenseScreenView_PrivacyPolicy_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_PrivacyPolicy_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://github.com/realm/realm-java&quot;&gt;Realm&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://raw.githubusercontent.com/realm/realm-java/master/LICENSE&quot;&gt;Apache License 2.0&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_Realm_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_Realm_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Realm for Android ähnelt.
        /// </summary>
        public static string LicenseScreenView_Realm_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Realm_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://github.com/itinero/reminiscence/&quot;&gt;Ben Abelshausen&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://opensource.org/licenses/mit-license.php&quot;&gt;MIT&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_Reminiscence_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_Reminiscence_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reminiscence ähnelt.
        /// </summary>
        public static string LicenseScreenView_Reminiscence_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Reminiscence_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Diese Datenschutzerklärung hat einen rein informativen Charakter, beschreibt aber verlässlich den aktuellen Stand des Systems. Änderungen innerhalb des Systems, die die Nutzung personenbezogener Daten betreffen, werden umgehend in die Datenschutzerklärung eingepflegt, um den Nutzerinnen und Nutzern jederzeit den aktuellen datenschutzrechtlichen Stand des Systems darlegen zu können. Die jeweiligen Sachverhalte ergeben sich aus den einschlägigen rechtlichen Regelungen und sind unabhängig von dieser Erläuterun [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string LicenseScreenView_RightOfPP_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_RightOfPP_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rechtlicher Status der Datenschutzerklärung ähnelt.
        /// </summary>
        public static string LicenseScreenView_RightOfPP_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_RightOfPP_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://github.com/jamesmontemagno/SettingsPlugin&quot;&gt;James Montemagno&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://github.com/jamesmontemagno/SettingsPlugin/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_SettingsPlugin_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_SettingsPlugin_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings Plugin ähnelt.
        /// </summary>
        public static string LicenseScreenView_SettingsPlugin_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_SettingsPlugin_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die Applikation Historisches Paderborn ist eine experimentelle Software, welche zu Studien- und Forschungszwecken an der Universität Paderborn erstellt wurde. Die Software stellt historische Informationen als auch Kartendaten dar, wobei weder die Vollständigkeit noch die Korrektheit der Daten garantiert wird. Die Smartphone Applikation führt eine Positionsschätzung mit Hilfe von GPS durch. Die Genauigkeit der Positionsschätzung ist abhängig von vielen Faktoren, deshalb kann eine fehlerfreie Funktion nicht g [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string LicenseScreenView_ToU_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_ToU_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nutzungsbedingungen ähnelt.
        /// </summary>
        public static string LicenseScreenView_ToU_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_ToU_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Im Rahmen der Feedback Funktion die jeder Nutzer freiwillig nutzen kann, muss dieser einen Namen und eine Emailadresse angeben um eine Nachricht an die Entwickler zu senden. Diese Daten werden verschlüsselt versendet. Es werden ebenfalls keinerlei Daten aus dem privaten Speicher des Smartphones gelesen die nicht Teil der Datenbank sind. ähnelt.
        /// </summary>
        public static string LicenseScreenView_Transparancy_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_Transparancy_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sichtbarkeit der Daten / Transparenz ähnelt.
        /// </summary>
        public static string LicenseScreenView_Transparancy_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Transparancy_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://github.com/unitycontainer/unity&quot;&gt;Microsoft&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;Apache License 2.0&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_Unity_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_Unity_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unity ähnelt.
        /// </summary>
        public static string LicenseScreenView_Unity_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_Unity_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die Historisches in Paderborn App ist eine offene Applikation, welche mit einen Google Konto über den Google Playstore sowie dem Apple iTunes App Store heruntergeladen werden kann. In der aktuellen Version bezieht die App seine Daten von einer lokalen Datenbank die bei der Installation der App auf dem Speicher des Smartphones abgelegt wird. Das Kartenmaterial wird je nach Verwendung und Position des Nutzers vom OpenStreetMap Server geladen. Darüber hinaus steht es dem Nutzer frei ein Feedback an die Entwick [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string LicenseScreenView_UsagePersonalData_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_UsagePersonalData_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Erhebung, Verarbeitung und Nutzung personenbezogener Daten ähnelt.
        /// </summary>
        public static string LicenseScreenView_UsagePersonalData_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_UsagePersonalData_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von &lt;a href=&quot;https://github.com/xamarin/AndroidSupportComponents&quot;&gt;Xamarin&lt;/a&gt;, lizensiert unter &lt;a href=&quot;https://github.com/xamarin/AndroidSupportComponents/blob/master/LICENSE.md&quot;&gt;MIT&lt;/a&gt;. Es wurden keine Änderungen vorgenommen. ähnelt.
        /// </summary>
        public static string LicenseScreenView_XSL_Text {
            get {
                return ResourceManager.GetString("LicenseScreenView_XSL_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Xamarin Support Libraries ähnelt.
        /// </summary>
        public static string LicenseScreenView_XSL_Title {
            get {
                return ResourceManager.GetString("LicenseScreenView_XSL_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Historisches Paderborn ähnelt.
        /// </summary>
        public static string MainPage_MenuTitle {
            get {
                return ResourceManager.GetString("MainPage_MenuTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Feedback ähnelt.
        /// </summary>
        public static string MainPageViewModel_Feedback {
            get {
                return ResourceManager.GetString("MainPageViewModel_Feedback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rechtliche Hinweise ähnelt.
        /// </summary>
        public static string MainPageViewModel_LegalNotices {
            get {
                return ResourceManager.GetString("MainPageViewModel_LegalNotices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Übersicht ähnelt.
        /// </summary>
        public static string MainPageViewModel_OverviewPage {
            get {
                return ResourceManager.GetString("MainPageViewModel_OverviewPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Routen ähnelt.
        /// </summary>
        public static string MainPageViewModel_Routes {
            get {
                return ResourceManager.GetString("MainPageViewModel_Routes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Einstellungen ähnelt.
        /// </summary>
        public static string MainPageViewModel_Settings {
            get {
                return ResourceManager.GetString("MainPageViewModel_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vorlesen ähnelt.
        /// </summary>
        public static string RouteDetailsPage_PlayAudio {
            get {
                return ResourceManager.GetString("RouteDetailsPage_PlayAudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Route starten ähnelt.
        /// </summary>
        public static string RouteDetailsPage_StartRoute {
            get {
                return ResourceManager.GetString("RouteDetailsPage_StartRoute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auf der Route ähnelt.
        /// </summary>
        public static string RouteDetailsPage_Tags {
            get {
                return ResourceManager.GetString("RouteDetailsPage_Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beschreibung ähnelt.
        /// </summary>
        public static string RouteDetailsPageViewModel_Description {
            get {
                return ResourceManager.GetString("RouteDetailsPageViewModel_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} km ähnelt.
        /// </summary>
        public static string RouteDetailsPageViewModel_Distance {
            get {
                return ResourceManager.GetString("RouteDetailsPageViewModel_Distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} min ähnelt.
        /// </summary>
        public static string RouteDetailsPageViewModel_Duration {
            get {
                return ResourceManager.GetString("RouteDetailsPageViewModel_Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Karte ähnelt.
        /// </summary>
        public static string RouteDetailsPageViewModel_Map {
            get {
                return ResourceManager.GetString("RouteDetailsPageViewModel_Map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Kilometer ähnelt.
        /// </summary>
        public static string RoutesOverviewListItemViewModel_Distance {
            get {
                return ResourceManager.GetString("RoutesOverviewListItemViewModel_Distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Minuten ähnelt.
        /// </summary>
        public static string RoutesOverviewListItemViewModel_Duration {
            get {
                return ResourceManager.GetString("RoutesOverviewListItemViewModel_Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auf der Route: ähnelt.
        /// </summary>
        public static string RoutesOverviewView_Tags {
            get {
                return ResourceManager.GetString("RoutesOverviewView_Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die App Einführung ähnelt.
        /// </summary>
        public static string SettingsScreenView_AppIntro_Title {
            get {
                return ResourceManager.GetString("SettingsScreenView_AppIntro_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wenn diese Einstellung aktiviert ist, wird Audio automatisch für die aktuelle Seite gestartet. ähnelt.
        /// </summary>
        public static string SettingsScreenView_AutoStartAudio_Text {
            get {
                return ResourceManager.GetString("SettingsScreenView_AutoStartAudio_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatisch Audio beginnen ähnelt.
        /// </summary>
        public static string SettingsScreenView_AutoStartAudio_Title {
            get {
                return ResourceManager.GetString("SettingsScreenView_AutoStartAudio_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wenn diese Einstellung aktiviert ist, wird nach Ende der Audiowiedergabe automatisch zur nächsten Seite gewechselt. ähnelt.
        /// </summary>
        public static string SettingsScreenView_AutoSwitchPage_Text {
            get {
                return ResourceManager.GetString("SettingsScreenView_AutoSwitchPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatisch Seiten wechseln ähnelt.
        /// </summary>
        public static string SettingsScreenView_AutoSwitchPage_Title {
            get {
                return ResourceManager.GetString("SettingsScreenView_AutoSwitchPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sehenswürdigkeiten ähnelt.
        /// </summary>
        public static string SettingsScreenView_POI_Title {
            get {
                return ResourceManager.GetString("SettingsScreenView_POI_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wenn aktiviert, wird der Hinweis zur Audiowiedergabe erneut angezeigt ähnelt.
        /// </summary>
        public static string SettingsScreenView_RepeatHintAudio_Text {
            get {
                return ResourceManager.GetString("SettingsScreenView_RepeatHintAudio_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wenn aktiviert, wird der Hinweis zum automatischen Seitenwechsel erneut angezeigt ähnelt.
        /// </summary>
        public static string SettingsScreenView_RepeatHintAutoPageSwitch_Text {
            get {
                return ResourceManager.GetString("SettingsScreenView_RepeatHintAutoPageSwitch_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wenn aktiviert, wird der Hinweis zur Zeitleiste erneut angezeigt ähnelt.
        /// </summary>
        public static string SettingsScreenView_RepeatHintTimeSlider_Text {
            get {
                return ResourceManager.GetString("SettingsScreenView_RepeatHintTimeSlider_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wenn aktiviert, wird die App Einführung beim nächsten Start erneut angezeigt ähnelt.
        /// </summary>
        public static string SettingsScreenView_RepeatIntro_Text {
            get {
                return ResourceManager.GetString("SettingsScreenView_RepeatIntro_Text", resourceCulture);
            }
        }
    }
}
