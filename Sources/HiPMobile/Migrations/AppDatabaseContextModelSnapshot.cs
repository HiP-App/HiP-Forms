// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models;
using PaderbornUniversity.SILab.Hip.Mobile.Shared.DataAccessLayer;
using System;

namespace PaderbornUniversity.SILab.Hip.Mobile.Shared.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    partial class AppDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.AchievementBase", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool>("IsUnlocked");

                    b.Property<string>("NextId");

                    b.Property<int>("Points");

                    b.Property<string>("ThumbnailUrl");

                    b.Property<string>("Title");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Achievements");

                    b.HasDiscriminator<string>("Type").HasValue("AchievementBase");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.AchievementPendingNotification", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AchievementId");

                    b.HasKey("Id");

                    b.HasIndex("AchievementId");

                    b.ToTable("AchievementPendingNotifications");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Exhibit", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool>("DetailsDataLoaded");

                    b.Property<int>("IdForRestApi");

                    b.Property<string>("ImageId");

                    b.Property<DateTimeOffset?>("LastNearbyTime");

                    b.Property<string>("LocationAsString");

                    b.Property<string>("Name");

                    b.Property<int>("Radius");

                    b.Property<DateTimeOffset>("Timestamp");

                    b.Property<bool>("Unlocked");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Exhibits");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.ExhibitQuizScore", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ExhibitId");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.HasIndex("ExhibitId");

                    b.ToTable("ExhibitQuizScore");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.JoinClasses.JoinExhibitPage", b =>
                {
                    b.Property<string>("ExhibitId");

                    b.Property<string>("PageId");

                    b.HasKey("ExhibitId", "PageId");

                    b.HasIndex("PageId");

                    b.ToTable("JoinExhibitPage");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.JoinClasses.JoinPagePage", b =>
                {
                    b.Property<string>("PageId");

                    b.Property<string>("AdditionalInformationPageId");

                    b.HasKey("PageId", "AdditionalInformationPageId");

                    b.HasIndex("AdditionalInformationPageId");

                    b.ToTable("JoinPagePage");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.JoinClasses.JoinRouteTag", b =>
                {
                    b.Property<string>("RouteId");

                    b.Property<string>("TagId");

                    b.HasKey("RouteId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("JoinRouteTag");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.JoinClasses.Waypoint", b =>
                {
                    b.Property<string>("RouteId");

                    b.Property<string>("ExhibitId");

                    b.Property<string>("LocationAsString");

                    b.Property<bool>("Visited");

                    b.HasKey("RouteId", "ExhibitId");

                    b.HasIndex("ExhibitId");

                    b.ToTable("Waypoint");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Media", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DataPath");

                    b.Property<int>("IdForRestApi");

                    b.Property<DateTimeOffset>("Timestamp");

                    b.Property<string>("Title");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Media");

                    b.HasDiscriminator<string>("Type").HasValue("Media");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Page", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AudioId");

                    b.Property<int>("IdForRestApi");

                    b.Property<int>("PageType");

                    b.Property<DateTimeOffset>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("AudioId");

                    b.ToTable("Pages");

                    b.HasDiscriminator<int>("PageType");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Quiz", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ExhibitId");

                    b.Property<string>("ImageId");

                    b.Property<string>("OptionA");

                    b.Property<string>("OptionB");

                    b.Property<string>("OptionC");

                    b.Property<string>("OptionD");

                    b.Property<string>("Status");

                    b.Property<string>("Text");

                    b.Property<DateTimeOffset>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ExhibitId");

                    b.HasIndex("ImageId");

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Route", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AudioId");

                    b.Property<string>("Description");

                    b.Property<bool>("DetailsDataLoaded");

                    b.Property<double>("Distance");

                    b.Property<int>("Duration");

                    b.Property<int>("IdForRestApi");

                    b.Property<string>("ImageId");

                    b.Property<DateTimeOffset?>("LastTimeDismissed");

                    b.Property<string>("Name");

                    b.Property<DateTimeOffset>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("AudioId");

                    b.HasIndex("ImageId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.RouteTag", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IdForRestApi");

                    b.Property<string>("ImageId");

                    b.Property<string>("Name");

                    b.Property<string>("Tag");

                    b.Property<DateTimeOffset>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("RouteTag");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.TimeSliderPageImage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Date");

                    b.Property<string>("ImageId");

                    b.Property<string>("PageId");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("PageId");

                    b.ToTable("TimeSliderPageImage");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.ExhibitsVisitedAchievement", b =>
                {
                    b.HasBaseType("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.AchievementBase");

                    b.Property<int>("Count");

                    b.ToTable("ExhibitsVisitedAchievement");

                    b.HasDiscriminator().HasValue("ExhibitsVisitedAchievement");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.RouteFinishedAchievement", b =>
                {
                    b.HasBaseType("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.AchievementBase");

                    b.Property<int>("RouteId");

                    b.ToTable("RouteFinishedAchievement");

                    b.HasDiscriminator().HasValue("RouteFinishedAchievement");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Audio", b =>
                {
                    b.HasBaseType("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Media");

                    b.Property<string>("Caption");

                    b.ToTable("Audio");

                    b.HasDiscriminator().HasValue("Audio");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Image", b =>
                {
                    b.HasBaseType("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Media");

                    b.Property<string>("Description");

                    b.ToTable("Image");

                    b.HasDiscriminator().HasValue("Image");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.ImagePage", b =>
                {
                    b.HasBaseType("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Page");

                    b.Property<string>("ImageId");

                    b.HasIndex("ImageId");

                    b.ToTable("ImagePage");

                    b.HasDiscriminator().HasValue(PageType.ImagePage);
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.TextPage", b =>
                {
                    b.HasBaseType("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Page");

                    b.Property<string>("Description");

                    b.Property<string>("FontFamily");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.ToTable("TextPage");

                    b.HasDiscriminator().HasValue(PageType.TextPage);
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.TimeSliderPage", b =>
                {
                    b.HasBaseType("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Page");

                    b.Property<bool?>("HideYearNumbers");

                    b.Property<string>("Text")
                        .HasColumnName("TimeSliderPage_Text");

                    b.Property<string>("Title")
                        .HasColumnName("TimeSliderPage_Title");

                    b.ToTable("TimeSliderPage");

                    b.HasDiscriminator().HasValue(PageType.TimeSliderPage);
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.AchievementPendingNotification", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.AchievementBase", "Achievement")
                        .WithMany()
                        .HasForeignKey("AchievementId");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Exhibit", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.ExhibitQuizScore", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Exhibit", "Exhibit")
                        .WithMany()
                        .HasForeignKey("ExhibitId");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.JoinClasses.JoinExhibitPage", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Exhibit", "Exhibit")
                        .WithMany("PagesRefs")
                        .HasForeignKey("ExhibitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.JoinClasses.JoinPagePage", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Page", "AdditionalInformationPage")
                        .WithMany()
                        .HasForeignKey("AdditionalInformationPageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Page", "Page")
                        .WithMany("AdditionalInformationPagesRefs")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.JoinClasses.JoinRouteTag", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Route", "Route")
                        .WithMany("TagsRefs")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.RouteTag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.JoinClasses.Waypoint", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Exhibit", "Exhibit")
                        .WithMany()
                        .HasForeignKey("ExhibitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Route", "Route")
                        .WithMany("Waypoints")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Page", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Audio", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Quiz", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Exhibit", "Exhibit")
                        .WithMany()
                        .HasForeignKey("ExhibitId");

                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Route", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Audio", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId");

                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.RouteTag", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.TimeSliderPageImage", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.TimeSliderPage", "Page")
                        .WithMany("SliderImages")
                        .HasForeignKey("PageId");
                });

            modelBuilder.Entity("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.ImagePage", b =>
                {
                    b.HasOne("PaderbornUniversity.SILab.Hip.Mobile.Shared.BusinessLayer.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");
                });
#pragma warning restore 612, 618
        }
    }
}
